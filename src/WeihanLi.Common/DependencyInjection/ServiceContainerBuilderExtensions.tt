<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".generated.cs" #>

namespace WeihanLi.Common.DependencyInjection;

public static partial class ServiceContainerBuilderExtensions
{
<#
            var lifetimes= new []{ "Singleton", "Scoped", "Transient" };
            var prefixes= new [] {"", "Try"};
foreach(var prefix in prefixes)
foreach(var lifetime in lifetimes)
            {
#>
    public static IServiceContainerBuilder <#= prefix#>Add<#=lifetime #>(this IServiceContainerBuilder serviceContainerBuilder, Type serviceType)
    {
        serviceContainerBuilder.<#= prefix#>Add(new ServiceDefinition(serviceType, ServiceLifetime.<#=lifetime #>));
        return serviceContainerBuilder;
    }

    public static IServiceContainerBuilder <#= prefix#>Add<#=lifetime #>(this IServiceContainerBuilder serviceContainerBuilder, Type serviceType, Type implementType)
    {
        serviceContainerBuilder.<#= prefix#>Add(new ServiceDefinition(serviceType, implementType, ServiceLifetime.<#=lifetime #>));
        return serviceContainerBuilder;
    }

    public static IServiceContainerBuilder <#= prefix#>Add<#=lifetime #><TService>(this IServiceContainerBuilder serviceContainerBuilder, Func<IServiceProvider, object> func)
    {
        serviceContainerBuilder.<#= prefix#>Add(ServiceDefinition.<#=lifetime #><TService>(func));
        return serviceContainerBuilder;
    }

    public static IServiceContainerBuilder <#= prefix#>Add<#=lifetime #><TService>(this IServiceContainerBuilder serviceContainerBuilder)
    {
        serviceContainerBuilder.<#= prefix#>Add(ServiceDefinition.<#=lifetime #><TService>());
        return serviceContainerBuilder;
    }

    public static IServiceContainerBuilder <#= prefix#>Add<#=lifetime #><TService, TServiceImplement>(this IServiceContainerBuilder serviceContainerBuilder) where TServiceImplement : TService
    {
        serviceContainerBuilder.<#= prefix#>Add(ServiceDefinition.<#=lifetime #><TService, TServiceImplement>());
        return serviceContainerBuilder;
    }

<#
  }
#>
}
